server.port=8900
mybatis.config-location=classpath:config/mybatis-config.xml
mybatis.mapper-locations=classpath*:mapper/*.xml
#数据源定义
spring.shardingsphere.datasource.names=ds,tenant-1,tenant-2,tenant-3

# 数据源 tenant-1 分库
spring.shardingsphere.datasource.tenant-1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.tenant-1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.tenant-1.jdbc-url=jdbc:mysql://10.4.148.135:3306/tenant_1?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.tenant-1.username=root
spring.shardingsphere.datasource.tenant-1.password=123456

# 数据源 tenant-2 分库
spring.shardingsphere.datasource.tenant-2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.tenant-2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.tenant-2.jdbc-url=jdbc:mysql://10.4.148.135:3306/tenant_2?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.tenant-2.username=root
spring.shardingsphere.datasource.tenant-2.password=123456

# 数据源 tenant-3 分库
spring.shardingsphere.datasource.tenant-3.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.tenant-3.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.tenant-3.jdbc-url=jdbc:mysql://10.4.148.135:3306/tenant_3?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.tenant-3.username=root
spring.shardingsphere.datasource.tenant-3.password=123456

# 数据源 广播库（平台库）全局表的库
spring.shardingsphere.datasource.ds.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds.jdbc-url=jdbc:mysql://10.4.148.135:3306/platform?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.ds.username=root
spring.shardingsphere.datasource.ds.password=123456

# 默认库 平台库
spring.shardingsphere.sharding.default-data-source-name=ds

#根据租户分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=tenant
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=tenant-$->{tenant}


# 表配置
spring.shardingsphere.sharding.tables.sys_user.actual-data-nodes=tenant-${['1','2','3']}.sys_user
# 广播表
#spring.shardingsphere.sharding.shardingRule.broadcast-tables=sys_user_common
#spring.shardingsphere.sharding.broadcast-tables=sys_user_common
# 有点坑....
spring.shardingsphere.sharding.tables.sys_user_common.actual-data-nodes=ds.sys_user_common
#绑定表
spring.shardingsphere.ds.shardingRule.binding-tables[0]=sys_user,sys_user_union
#打印sql
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true
